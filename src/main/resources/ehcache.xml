<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="ehcache.xsd">
	<diskStore path="java.io.tmpdir/shiro-ehcache" />

	<defaultCache maxElementsInMemory="2000" eternal="false"
		timeToIdleSeconds="18000" timeToLiveSeconds="18000" overflowToDisk="true"
		diskPersistent="false" diskExpiryThreadIntervalSeconds="1200" />
	<cache name="UBASDATACHCACHE" maxElementsInMemory="2000"
		overflowToDisk="true" eternal="true" timeToLiveSeconds="600"
		timeToIdleSeconds="600" diskPersistent="true"
		diskExpiryThreadIntervalSeconds="600" />
	<cache name="UBAS_BOSS_SERVICES_CACHE1" maxElementsInMemory="1000000"
		overflowToDisk="true" eternal="false" timeToLiveSeconds="600"
		timeToIdleSeconds="600" diskPersistent="true"
		diskExpiryThreadIntervalSeconds="600" />
	<cache name="UBAS_BOSS_SERVICES_CACHE2" maxElementsInMemory="1000000"
		overflowToDisk="true" eternal="false" timeToLiveSeconds="600"
		timeToIdleSeconds="600" diskPersistent="true"
		diskExpiryThreadIntervalSeconds="600" />
	<cache name="UBAS_BOSS_SERVICES_CACHE3" maxElementsInMemory="1000000"
		overflowToDisk="true" eternal="false" timeToLiveSeconds="600"
		timeToIdleSeconds="600" diskPersistent="true"
		diskExpiryThreadIntervalSeconds="600" />
	<cache name="UBAS_BOSS_Destoken" maxElementsInMemory="1000000"
		overflowToDisk="true" eternal="false" timeToLiveSeconds="120"
		timeToIdleSeconds="120" diskPersistent="true"
		diskExpiryThreadIntervalSeconds="600" />
	
	<!-- name : 自定义缓存名称 maxElementsInMemory ： 最大缓存数量 eternal : 对象是否永久有效 timeToIdleSeconds 
		： 对象在失效前允许闲置时长 diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。 
		maxElementsOnDisk ： 硬盘最大缓存个数 diskPersistent ： 是否缓存虚拟机重启期数据 diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒 
		timeToLiveSeconds ： 对象在失效前允许存活时间 overflowToDisk ： 当内存中对象数量达到maxElementsInMemory时，Ehcache将会对象写到磁盘中 
		memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用 
		clearOnFlush ： 内存数量最大时是否清除。 -->

</ehcache>